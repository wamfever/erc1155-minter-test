{"version":3,"sources":["assets/images/metamask_logo.jpeg","services/ContractData.tsx","services/Web3Service.tsx","screens/Dashboard/DashboardScreen.style.tsx","components/Panels/Panel.style.tsx","App.style.tsx","services/ButtonFactory.tsx","components/Panels/PanelWhitelist/PanelWhitelist.tsx","components/Panels/PanelBurn/PanelBurn.tsx","components/Panels/PanelMint/PanelMint.tsx","components/Panels/PanelBlacklist/PanelBlacklist.tsx","screens/Dashboard/DashboardScreen.tsx","screens/Connect/ConnectScreen.style.tsx","components/LoginModal/LoginModal.style.tsx","components/LoginModal/LoginModal.tsx","screens/Connect/ConnectScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ContractData","web3","contract","selectedAddress","Web3Service","setConnectedWeb3","instance","address","eth","Contract","abi","console","log","getWeb3","getERC1155Contract","burnTokens","id","amount","methods","send","from","mintTokens","addWhitelist","whitelisted","removeWhitelist","owner","call","isWhitelisted","getCurrentAddress","DashboardWraper","styled","PageContainer","TitleWrapper","Panel","PanelContent","InputErrorSpan","Button","button","DisabledButton","Input","input","ButtonFactory","getSubmitButton","isLoading","type","PanelWhitelist","props","refreshRoles","React","useState","pendingBlockchain","setPending","useForm","register","handleSubmit","errors","watch","formState","onSubmit","data","then","toast","transactionHash","placeholder","required","PanelBurn","tokenId","PanelMint","PanelBlacklist","DashboardScreen","isFinishedComputeRoles","setFinishedComputeRoles","isOwner","setIsOwner","isMinter","setIsMinter","Web3","window","ethereum","toLowerCase","minterData","refreshRolesObject","ButtonWraper","LoginWrapper","ModalContent","ModalHeader","ModalBody","ModalFooter","MetamaskLogin","MetamaskImg","ModalCloseButton","ModalStyle","content","top","left","right","bottom","marginRight","transform","background","border","minWidth","LoginModal","modalIsOpen","afterOpenModal","closeModal","connectSuccessCallback","isOpen","onAfterOpen","onRequestClose","style","ariaHideApp","contentLabel","onClick","request","method","e","err","src","require","default","alt","ConnectScreen","history","useHistory","setIsOpen","push","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f921048f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/metamask_logo.3e74b4a9.jpeg\";","const ContractData = {\n    \"address\":\"0x9c88EA32d0693F8dA29EaFa2A239A7EF716290f1\",\n    \"abi\":[\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"name_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"symbol_\",\n          \"type\": \"string\"\n        },\n        {\n          \"internalType\": \"string\",\n          \"name\": \"_url\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"ApprovalForAll\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"previousOwner\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"OwnershipTransferred\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256[]\",\n          \"name\": \"ids\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256[]\",\n          \"name\": \"values\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"TransferBatch\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"value\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TransferSingle\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"value\",\n          \"type\": \"string\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"URI\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"balanceOf\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"accounts\",\n          \"type\": \"address[]\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"ids\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"name\": \"balanceOfBatch\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"\",\n          \"type\": \"uint256[]\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isApprovedForAll\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"isWhitelisted\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"name\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"owner\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"renounceOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"ids\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"uint256[]\",\n          \"name\": \"amounts\",\n          \"type\": \"uint256[]\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeBatchTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"from\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"address\",\n          \"name\": \"to\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"data\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"name\": \"safeTransferFrom\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"operator\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"approved\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"name\": \"setApprovalForAll\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"bytes4\",\n          \"name\": \"interfaceId\",\n          \"type\": \"bytes4\"\n        }\n      ],\n      \"name\": \"supportsInterface\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bool\",\n          \"name\": \"\",\n          \"type\": \"bool\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"symbol\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"newOwner\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"transferOwnership\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"uri\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\",\n      \"constant\": true\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"account\",\n          \"type\": \"address\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"mintTokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"whitelisted\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"addWhitelist\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"whitelisted\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"removeWhitelist\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"amount\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"burnTokens\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    }\n  ]\n\n};\n\nexport default ContractData;\n","import ContractData from \"./ContractData\";\n\nlet web3 : any = null;\nlet contract : any = null;\nlet selectedAddress : any = null;\n\nconst Web3Service = {\n    setConnectedWeb3: (instance : any, address: any) => {\n        web3 = instance;\n        contract = new web3.eth.Contract(ContractData.abi as any, ContractData.address);\n        selectedAddress = address;\n\n        console.log('Successfully registered Web3', web3);\n    },\n\n    getWeb3: () => web3,\n\n    getERC1155Contract: () => contract,\n\n    burnTokens: (id : any, amount : any) => {\n        return contract.methods.burnTokens(id, amount).send({\n            from: selectedAddress,\n        });\n    },\n\n    mintTokens: (id : any, amount : any, address: any) => {\n        return contract.methods.mintTokens(address, id, amount).send({\n            from: selectedAddress,\n        });\n    },\n\n    addWhitelist: (whitelisted : any) => {\n        return contract.methods.addWhitelist(whitelisted).send({\n            from: selectedAddress,\n        });\n    },\n\n    removeWhitelist: (whitelisted : any) => {\n        return contract.methods.removeWhitelist(whitelisted).send({\n            from: selectedAddress,\n        });\n    },\n\n    owner: () => {\n        return contract.methods.owner().call();\n    },\n\n    isWhitelisted: (address: any) => {\n        return contract.methods.isWhitelisted(address).call();\n    },\n\n    getCurrentAddress: () => selectedAddress,\n};\n\nexport default Web3Service;\n","import styled from 'styled-components';\n\nexport const DashboardWraper = styled('div')`\n    flex-direction: row;\n    display: flex;\n    justify-content: space-around;\n`;\n\nexport const PageContainer = styled('div')`\n    flex-direction: column;\n    display: flex;\n    justify-content: center;\n    height:100%;\n`;\n\nexport const TitleWrapper = styled('div')`\n    flex-direction: row;\n    display: flex;\n    justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport const Panel = styled('div')`\n    flex-direction: column;\n    display: flex;\n    margin: 12px;\n`;\n\nexport const PanelContent = styled('div')`\n    h1 {\n        text-align: center;\n        color: #434343;\n        text-transform: uppercase;\n        letter-spacing: .05em;\n    }\n    width: 400px;\n    padding: 15px;\n    border: #ddd thin solid;\n    section {\n        margin-bottom: 15px;\n    }\n`;\n\nexport const InputErrorSpan = styled('span')`\n    font-size: 0.75rem;\n    color: red;\n`;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n    padding: 10px;\n    box-sizing: border-box;\n    font-family: 'Catamaran', sans-serif;\n    text-transform: uppercase;\n    letter-spacing: .07em;\n    background: #2980b9;\n    border: none;\n    border-radius: 5px;\n    width: 100%;\n    color: white;\n    font-size:16px;\n    cursor: pointer;\n    transition: background 300ms;\n    &:hover {\n        background: #3498db;     \n    };\n    margin-top: 12px;\n`;\n\nexport const DisabledButton = styled.button`\n    padding: 10px;\n    box-sizing: border-box;\n    font-family: 'Catamaran', sans-serif;\n    text-transform: uppercase;\n    letter-spacing: .07em;\n    background: darkgrey;\n    border: none;\n    border-radius: 5px;\n    width: 100%;\n    color: white;\n    font-size:16px;\n    cursor: pointer;\n    transition: background 300ms;\n    margin-top: 12px;\n`;\n\nexport const Input = styled.input`\n    width: 100%;\n    padding: 12px 20px;\n    margin: 8px 0;\n    display: inline-block;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    box-sizing: border-box;\n`;\n","import {Button, DisabledButton} from \"../App.style\";\nimport React from \"react\";\n\nconst ButtonFactory = {\n    getSubmitButton: (isLoading : any) => {\n        if (isLoading) {\n            return (<DisabledButton type=\"submit\">Loading..</DisabledButton>);\n        }\n\n        return (<Button type=\"submit\">Submit</Button>);\n    }\n};\n\nexport default ButtonFactory;\n","import React from 'react';\nimport {InputErrorSpan, Panel, PanelContent} from '../Panel.style';\nimport {useForm} from \"react-hook-form\";\nimport Web3Service from \"../../../services/Web3Service\";\nimport {toast} from \"react-toastify\";\nimport {Button, Input} from '../../../App.style';\nimport ButtonFactory from \"../../../services/ButtonFactory\";\n\nexport default function PanelWhitelist(props: any) {\n    const { refreshRoles } = props;\n\n    const [pendingBlockchain, setPending] = React.useState(false);\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const onSubmit = (data : any) => {\n        setPending(true);\n        Web3Service.addWhitelist(data.whitelisted).then((data : any) => {\n            toast(`Whitelisting completed: ${data.transactionHash}`);\n            setPending(false);\n            refreshRoles();\n        })\n    };\n\n    return (\n        <Panel>\n            <PanelContent>\n                <h2>OWNER - Add Whitelist</h2>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    {/* include validation with required or other standard HTML validation rules */}\n                    <Input type=\"text\" placeholder=\"Account\" {...register(\"whitelisted\", { required: true })} />\n                    {errors.whitelisted && <InputErrorSpan>Whitelisted address is required</InputErrorSpan>}\n\n                    {ButtonFactory.getSubmitButton(pendingBlockchain)}\n                </form>\n            </PanelContent>\n        </Panel>\n    );\n}\n","import React from 'react';\nimport {InputErrorSpan, Panel, PanelContent} from '../Panel.style';\nimport { useForm } from \"react-hook-form\";\nimport Web3Service from \"../../../services/Web3Service\";\nimport ContractData from \"../../../services/ContractData\";\nimport {toast} from \"react-toastify\";\nimport {Button, Input} from \"../../../App.style\";\nimport ButtonFactory from \"../../../services/ButtonFactory\";\n\nexport default function PanelBurn() {\n    const [pendingBlockchain, setPending] = React.useState(false);\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const onSubmit = (data : any) => {\n        setPending(true);\n        Web3Service.burnTokens(data.tokenId, data.amount).then((data : any) => {\n            toast(`Burning completed: ${data.transactionHash}`);\n            setPending(false);\n        })\n    };\n\n    return (\n        <Panel>\n            <PanelContent>\n                <h2>REGULAR - Burn Tokens</h2>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    {/* include validation with required or other standard HTML validation rules */}\n                    <Input type=\"number\" placeholder=\"Token ID\" {...register(\"tokenId\", { required: true })} />\n                    {errors.tokenId && <InputErrorSpan>Token ID is required</InputErrorSpan>}\n                    <Input type=\"number\" placeholder=\"Amount\" {...register(\"amount\", { required: true })} />\n                    {/* errors will return when field validation fails  */}\n                    {errors.amount && <InputErrorSpan>Amount is required</InputErrorSpan>}\n\n                    {ButtonFactory.getSubmitButton(pendingBlockchain)}\n                </form>\n            </PanelContent>\n        </Panel>\n    );\n}\n","import React from 'react';\nimport {InputErrorSpan, Panel, PanelContent} from '../Panel.style';\nimport { useForm } from \"react-hook-form\";\nimport Web3Service from \"../../../services/Web3Service\";\nimport {toast} from \"react-toastify\";\nimport {Button, Input} from \"../../../App.style\";\nimport ButtonFactory from \"../../../services/ButtonFactory\";\n\nexport default function PanelMint() {\n    const [pendingBlockchain, setPending] = React.useState(false);\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n\n    const onSubmit = (data : any) => {\n        setPending(true);\n        Web3Service.mintTokens(data.tokenId, data.amount, data.address).then((data : any) => {\n            toast(`Minting completed: ${data.transactionHash}`);\n            setPending(false);\n        })\n    };\n\n    return (\n        <Panel>\n            <PanelContent>\n                <h2>MINTER - Mint Tokens</h2>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    {/* include validation with required or other standard HTML validation rules */}\n                    <Input type=\"number\" placeholder=\"Token ID\" {...register(\"tokenId\", { required: true })} />\n                    {errors.tokenId && <InputErrorSpan>This field is required</InputErrorSpan>}\n                    <Input type=\"number\" placeholder=\"Amount\" {...register(\"amount\", { required: true })} />\n                    {/* errors will return when field validation fails  */}\n                    {errors.amount && <InputErrorSpan>This field is required</InputErrorSpan>}\n                    <Input type=\"text\" placeholder=\"Account\" {...register(\"address\", { required: true })} />\n                    {errors.address && <InputErrorSpan>This field is required</InputErrorSpan>}\n\n                    {ButtonFactory.getSubmitButton(pendingBlockchain)}\n                </form>\n            </PanelContent>\n        </Panel>\n    );\n}\n","import React from 'react';\nimport {InputErrorSpan, Panel, PanelContent} from '../Panel.style';\nimport {useForm} from \"react-hook-form\";\nimport Web3Service from \"../../../services/Web3Service\";\nimport {toast} from \"react-toastify\";\nimport {Button, Input} from \"../../../App.style\";\nimport ButtonFactory from \"../../../services/ButtonFactory\";\n\nexport default function PanelBlacklist(props: any) {\n    const { refreshRoles } = props;\n\n    const [pendingBlockchain, setPending] = React.useState(false);\n\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\n    const onSubmit = (data : any) => {\n        setPending(true);\n        Web3Service.removeWhitelist(data.whitelisted).then((data : any) => {\n            toast(`Blacklisting completed: ${data.transactionHash}`);\n            setPending(false);\n            refreshRoles();\n        });\n    };\n\n    return (\n        <Panel>\n            <PanelContent>\n                <h2>OWNER - Remove Whitelist</h2>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    {/* include validation with required or other standard HTML validation rules */}\n                    <Input type=\"text\" placeholder=\"Account\" {...register(\"whitelisted\", { required: true })} />\n                    {errors.whitelisted && <InputErrorSpan>Blacklisted address is required</InputErrorSpan>}\n\n                    {ButtonFactory.getSubmitButton(pendingBlockchain)}\n                </form>\n            </PanelContent>\n        </Panel>\n    );\n}\n","import React from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Web3 from \"web3\";\n\nimport Web3Service from \"../../services/Web3Service\";\nimport { DashboardWraper, PageContainer, TitleWrapper } from './DashboardScreen.style';\n\nimport PanelWhitelist from \"../../components/Panels/PanelWhitelist/PanelWhitelist\";\nimport PanelBurn from \"../../components/Panels/PanelBurn/PanelBurn\";\nimport PanelMint from \"../../components/Panels/PanelMint/PanelMint\";\nimport PanelBlacklist from \"../../components/Panels/PanelBlacklist/PanelBlacklist\";\n\nexport default function DashboardScreen() {\n\n    const [isFinishedComputeRoles, setFinishedComputeRoles] = React.useState(false);\n\n    const [isOwner, setIsOwner] = React.useState(false);\n    const [isMinter, setIsMinter] = React.useState(false);\n\n    // init web3\n    const web3 = new Web3(window.ethereum);\n    Web3Service.setConnectedWeb3(web3, window.ethereum.selectedAddress);\n\n    // check roles function\n    const refreshRoles = () => {\n        Web3Service.owner().then((data : any) => {\n            if (!data || !Web3Service.getCurrentAddress()) {\n                return;\n            }\n\n            if (data.toLowerCase() === Web3Service.getCurrentAddress().toLowerCase()) {\n                setIsOwner(true);\n            }\n\n            Web3Service.isWhitelisted(Web3Service.getCurrentAddress()).then((minterData : any) => {\n                setIsMinter(minterData);\n\n                setFinishedComputeRoles(true);\n            });\n        });\n    };\n\n    refreshRoles();\n\n    if (!isFinishedComputeRoles) {\n        return (<>\n            <h1>LOADING...</h1>\n        </>);\n    }\n\n    const refreshRolesObject = {\n        refreshRoles: refreshRoles,\n    };\n\n\n    return (<>\n        <PageContainer>\n            <TitleWrapper>\n                <h1>KeyKo - ERC1155 Controller</h1>\n            </TitleWrapper>\n\n            {isOwner && <DashboardWraper>\n                <PanelWhitelist {...refreshRolesObject} />\n                <PanelBlacklist {...refreshRolesObject} />\n            </DashboardWraper>}\n            <DashboardWraper>\n                {isMinter && <PanelMint />}\n                <PanelBurn />\n            </DashboardWraper>\n        </PageContainer>\n        <ToastContainer/>\n    </>);\n}\n","import styled from 'styled-components';\n\nexport const ButtonWraper = styled('div')`\n    h1 {\n        text-align: center;\n        color: #434343;\n        text-transform: uppercase;\n        letter-spacing: .05em;\n    }\n    width: 400px;\n    padding: 15px;\n    border: #ddd thin solid;\n    section {\n        margin-bottom: 15px;\n    }\n`\n\nexport const LoginWrapper = styled('div')`\n    flex-direction: column;\n    display: flex;\n    justify-content: center;\n    height: 100%;\n`\n\n","import styled from \"styled-components\";\n\nexport const ModalContent = styled('div')`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    pointer-events: auto;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid rgba(0,0,0,.2);\n    border-radius: .3rem;\n    outline: 0;\n`\n\nexport const ModalHeader = styled('div')`\n    display: flex;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.2rem 1rem;\n    border-bottom: 1px solid #dee2e6;\n    border-top-left-radius: calc(.3rem - 1px);\n    border-top-right-radius: calc(.3rem - 1px);\n`\n\nexport const ModalBody = styled('div')`\n    position: relative;\n    flex: 1 1 auto;\n    padding: 1rem;\n`\n\nexport const ModalFooter = styled('div')`\n    display: flex;\n    flex-wrap: wrap;\n    flex-shrink: 0;\n    align-items: center;\n    justify-content: flex-end;\n    padding: .75rem;\n    border-top: 1px solid #dee2e6;\n    border-bottom-right-radius: calc(.3rem - 1px);\n    border-bottom-left-radius: calc(.3rem - 1px);\n`\n\nexport const MetamaskLogin = styled('a')`\n    font-size: 14px;\n    line-height: 1.7;\n    color: #666666;\n    margin: 0px;\n    cursor: pointer;\n`\n\nexport const MetamaskImg = styled('img')`\n    height: 40px; \n    vertical-align: middle;\n`\n\nexport const ModalCloseButton = styled('button')`\n    border: none;\n    color: #FFFFFF;\n    padding: 10px;\n    text-align: center;\n    \n    text-decoration: none;\n    font-size: 16px;\n    cursor: pointer;\n    background-color: #f44336;\n    border-radius: 5px;\n`\n\nexport const ModalStyle = {\n    content : {\n        top                   : '30%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)',\n        background: 'transparent',\n        border: 'none,',\n        minWidth: '300px',\n    }\n};\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { ModalStyle, ModalContent, ModalHeader, ModalFooter, ModalBody, MetamaskLogin, MetamaskImg, ModalCloseButton } from './LoginModal.style';\n\n\nexport default function LoginModal(props : any) {\n    const { modalIsOpen, afterOpenModal, closeModal, connectSuccessCallback } = props;\n\n    const connectWeb3 = () => {\n        window.ethereum.request({method:'eth_requestAccounts'}).then((e:any) => {\n            connectSuccessCallback();\n        },(err : any) => {\n            console.log('Metamask request error:', err);\n        });\n    };\n\n    return (\n\n        <Modal\n            isOpen={modalIsOpen}\n            onAfterOpen={afterOpenModal}\n            onRequestClose={closeModal}\n            style={ModalStyle}\n            ariaHideApp={false}\n            contentLabel=\"Connect Modal\"\n        >\n            <ModalContent>\n                <ModalHeader>\n                    <h3>Providers</h3>\n                </ModalHeader>\n                <ModalBody>\n                    <MetamaskLogin onClick={connectWeb3}>\n                        <MetamaskImg\n                            src={require(\"../../assets/images/metamask_logo.jpeg\").default}\n                            alt={\"MetaMask Logo\"}\n                        />\n\n                        Connect MetaMask\n                    </MetamaskLogin>\n                </ModalBody>\n                <ModalFooter>\n                    <ModalCloseButton onClick={closeModal}>Close</ModalCloseButton>\n                </ModalFooter>\n            </ModalContent>\n        </Modal>\n    );\n}\n","import React from 'react';\nimport { Button } from '../../App.style';\nimport { ButtonWraper, LoginWrapper } from './ConnectScreen.style';\n\nimport Web3 from 'web3';\nimport LoginModal from \"../../components/LoginModal/LoginModal\";\nimport Web3Service from \"../../services/Web3Service\";\nimport {useHistory} from \"react-router\";\n\n\ndeclare global {\n  interface Window { ethereum: any; }\n}\n\nexport default function ConnectScreen() {\n  const history = useHistory();\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const afterOpenModal = () => {\n\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const initWeb3 = () => {\n    history.push('/dashboard');\n  };\n\n  return (\n    <LoginWrapper>\n      <ButtonWraper>\n        <Button onClick={openModal}>Connect Provider</Button>\n        <LoginModal\n          modalIsOpen={modalIsOpen}\n          afterOpenModal={afterOpenModal}\n          closeModal={closeModal}\n          connectSuccessCallback={initWeb3}\n        />\n      </ButtonWraper>\n    </LoginWrapper>\n  );\n}\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n\nimport DashboardScreen from \"./screens/Dashboard/DashboardScreen\";\nimport ConnectScreen from './screens/Connect/ConnectScreen';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\">\n            <DashboardScreen/>\n          </Route>\n\n          <Route path=\"/\">\n            <ConnectScreen/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}